api endpoint

https://64b022bac60b8f941af54a3f.mockapi.io/api/todo

apikey = ""

import 'bootstrap/dist/css/bootstrap.min.css';

****get post delete 

***state ve propsda değişiklik olursa render oluyor

**state e data yı gönderdiğimizde sayfa render oluyor

***veri çekme asenkron bir işlem olduğu için async await i kullanıyoruz axiosda try catchde var

        1----url yi const url = "" ile bir değişkene gönder
        clg(url) bir dene

        2--bu işlemleri bir fonksiynun içinde yap bir değişkene ata ve fonksiyonu çağır

        3--fetchden farklı olarak axios otomatik json a çevirir

***console.log da {} görürsem onun object olduğunu anlarım [] arrydir.

**const [todoItems, setTodoItems] = useState([]) 

ister array yaparım ister string bir değer yaparım useState() 'imi


*** useEffect (() => {
            getTodos()
        }, [])


        bu şekilde gettodos tekrar tekrar çalışmaz. sadece bir kere çalışır ve güncellenir

**const TodoList = (props) => {
  const {TodoList} =props
  console.log(TodoList)

  bu işlemin kısası const Todolist = ({Todolist}) matematik da yerine koyma metodu. 

  **döndürceğimiz her bir todoyu return ün içine yazmamız gerekir (div), her bir parenteda key vermemiz gerekir ki ünique olsun karışmasın

  **data.map() her defasında içine yazdığımız şeyin değerini alır. döngü gibi

  *** e.preventDefault() refresh işlemini engeller. sayfada yenilenme olmaz 

  **submit buttonu varsa e.preventDefault kullanılıyor genelde

  **post create,get read,pu update, delete delete crud

  **label htmlfor="" ve input id="" isimleri aynı olması gerekir. 

  **data-bs-dismiss ="modal" içinde bulunduğu pencereyi kapatıyor






